name: secrets-verification

on:
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: secrets-verification
  cancel-in-progress: true

jobs:
  verify-secrets:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      BOT_SECRET: ${{ secrets.BOT_SECRET }}
      VERCEL_URL: ${{ secrets.VERCEL_URL }}
      BINANCE_API_KEY: ${{ secrets.BINANCE_API_KEY }}
      BINANCE_API_SECRET: ${{ secrets.BINANCE_API_SECRET }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    steps:
      - name: Report presence (masked)
        shell: bash
        run: |
          set -euo pipefail
          required=(BOT_SECRET VERCEL_URL BINANCE_API_KEY BINANCE_API_SECRET)
          optional=(TELEGRAM_BOT_TOKEN TELEGRAM_CHAT_ID)
          missing_required=()
          check_var() {
            local name="$1"; local val="${!1:-}"; local req_type="$2";
            if [ -z "$val" ]; then
              if [ "$req_type" = "required" ]; then
                echo "[MISSING][REQUIRED] $name"; missing_required+=("$name")
              else
                echo "[MISSING][OPTIONAL] $name";
              fi
            else
              echo "[OK][$req_type] $name length=${#val}"
            fi
          }
          for v in "${required[@]}"; do check_var "$v" required; done
          for v in "${optional[@]}"; do check_var "$v" optional; done
          if [ ${#missing_required[@]} -gt 0 ]; then
            echo "Required secrets missing: ${missing_required[*]}" >&2
            exit 1
          fi
      - name: Authenticated live-bot check
        if: env.VERCEL_URL != '' && env.BOT_SECRET != ''
        uses: ./.github/actions/call-live-bot
        with:
          vercel-url: ${{ env.VERCEL_URL }}
          bot-secret: ${{ env.BOT_SECRET }}
          path: /api/live-bot
          method: GET
          fail-on-non-200: false
      - name: Evaluate authenticated response
        if: env.VERCEL_URL != '' && env.BOT_SECRET != ''
        shell: bash
        run: |
          echo "Check previous step log for HTTP 200; 401 indicates deployment protection (expected without bypass)."
