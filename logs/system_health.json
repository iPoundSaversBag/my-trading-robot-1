{
  "timestamp": "2025-08-08T20:17:37.002320",
  "overall_status": "NEEDS_ATTENTION",
  "passed_checks": 315,
  "warnings": 15,
  "failures": 1,
  "critical_issues": 0,
  "components_checked": [
    "DataIntegrity",
    "ParameterRanges",
    "core/position_manager.py",
    "live_trading.notification_system",
    "watcher.py",
    "core/advanced_market_analyzer.py",
    "ParameterBounds",
    "live_trading",
    "live_trading/live_bot.py",
    "analysis/diagnose_trades.py",
    "backtest_pipeline",
    "core/advanced_analytics_engine.py",
    "Performance",
    "Dependencies",
    "analysis/generate_plots.py",
    "core/strategy.py",
    "FileIntegrity",
    "core/portfolio.py",
    "Configuration",
    "CodeQuality",
    "utilities/utils.py",
    "core/backtest.py"
  ],
  "issues": [
    "DiagnosticResult(component='ParameterRanges', check_type='ConfidenceThresholdTooHigh', status='WARN', message='Parameter regime_confidence_threshold maximum bound 0.9 may be too restrictive', details=None, fix_available=True, fix_action='lower_confidence_threshold_regime_confidence_threshold')",
    "DiagnosticResult(component='DataIntegrity', check_type='MissingDataFile', status='FAIL', message='\ud83d\udea8 MISSING FALLBACK data file: data/crypto_data.parquet (timeframe: primary)', details=None, fix_available=True, fix_action='copy_or_download_data_data_crypto_data_parquet')",
    "DiagnosticResult(component='core/backtest.py', check_type='integration_points', status='WARN', message='Analysis integration may not be properly configured', details=None, fix_available=True, fix_action='fix_integration_points_analysis_integration')",
    "DiagnosticResult(component='core/backtest.py', check_type='integration_points', status='WARN', message='32-thread optimization may not be properly configured', details=None, fix_available=True, fix_action='fix_integration_points_32-thread_optimization')",
    "DiagnosticResult(component='core/backtest.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/strategy.py', details=None, fix_available=True, fix_action='add_dependency_import_core_strategy_py')",
    "DiagnosticResult(component='core/backtest.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: analysis/generate_plots.py', details=None, fix_available=True, fix_action='add_dependency_import_analysis_generate_plots_py')",
    "DiagnosticResult(component='core/strategy.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/portfolio.py', details=None, fix_available=True, fix_action='add_dependency_import_core_portfolio_py')",
    "DiagnosticResult(component='core/portfolio.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/strategy.py', details=None, fix_available=True, fix_action='add_dependency_import_core_strategy_py')",
    "DiagnosticResult(component='core/portfolio.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/position_manager.py', details=None, fix_available=True, fix_action='add_dependency_import_core_position_manager_py')",
    "DiagnosticResult(component='utilities/utils.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: data/data_manager.py', details=None, fix_available=True, fix_action='add_dependency_import_data_data_manager_py')",
    "DiagnosticResult(component='live_trading/live_bot.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: utilities/utils.py', details=None, fix_available=True, fix_action='add_dependency_import_utilities_utils_py')",
    "DiagnosticResult(component='live_trading/live_bot.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/strategy.py', details=None, fix_available=True, fix_action='add_dependency_import_core_strategy_py')",
    "DiagnosticResult(component='analysis/diagnose_trades.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/backtest.py', details=None, fix_available=True, fix_action='add_dependency_import_core_backtest_py')",
    "DiagnosticResult(component='analysis/diagnose_trades.py', check_type='dependency_mapping', status='WARN', message='Dependency may be missing: core/strategy.py', details=None, fix_available=True, fix_action='add_dependency_import_core_strategy_py')",
    "DiagnosticResult(component='core/backtest.py', check_type='critical_functions', status='WARN', message='Critical function may be missing: objective_function', details=None, fix_available=True, fix_action='add_critical_function_objective_function')",
    "DiagnosticResult(component='core/strategy.py', check_type='resource_optimization', status='WARN', message='cpu_optimization optimizations may be missing', details=None, fix_available=True, fix_action='enable_resource_optimization_cpu_optimization_core_strategy_py')"
  ],
  "auto_fixes_applied": [
    "fix_integration_points_analysis_integration",
    "fix_integration_points_32-thread_optimization",
    "add_dependency_import_core_strategy_py",
    "add_dependency_import_analysis_generate_plots_py",
    "add_dependency_import_core_portfolio_py",
    "add_dependency_import_core_strategy_py",
    "add_dependency_import_core_position_manager_py",
    "add_dependency_import_data_data_manager_py",
    "add_dependency_import_utilities_utils_py",
    "add_dependency_import_core_strategy_py",
    "add_dependency_import_core_backtest_py",
    "add_dependency_import_core_strategy_py",
    "add_critical_function_objective_function",
    "enable_resource_optimization_cpu_optimization_core_strategy_py"
  ]
}